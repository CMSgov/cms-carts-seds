service: database

frameworkVersion: "3"

plugins:
  - serverless-dynamodb
  - serverless-stack-termination-protection
  - serverless-s3-bucket-helper
  - serverless-plugin-scripts
  - serverless-offline

s3BucketHelper:
  loggingConfiguration:
    destinationBucketName: ${env:loggingBucket, ssm:/configuration/${self:custom.stage}/s3/accessLogsBucket, ssm:/configuration/default/s3/accessLogsBucket}
    logFilePrefix: ${env:loggingBucket, ssm:/configuration/${self:custom.stage}/s3/accessLogsPrefix, ssm:/configuration/default/s3/accessLogsPrefix}

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  serverlessTerminationProtection:
    stages:
      - main
      - master
      - val
      - production
  acsTableName: ${self:custom.stage}-acs
  fmapTableName: ${self:custom.stage}-fmap
  stateTableName: ${self:custom.stage}-state
  stateStatusTableName: ${self:custom.stage}-state-status
  sectionTableName: ${self:custom.stage}-section
  sectionBaseTableName: ${self:custom.stage}-section-base
  stageEnrollmentCountsTableName: ${self:custom.stage}-stg-enrollment-counts
  uploadsTableName: ${self:custom.stage}-uploads
  seedTestDataMap:
    production: false
    val: false
    main: false
    default: true
  seedTestData: ${self:custom.seedTestDataMap.${self:custom.stage}, self:custom.seedTestDataMap.default}
  seedOptions:
    prod: false
    val: false
    default:
      domain:
        sources:
          - table: ${self:custom.acsTableName}
            sources:
              [./data/seed-local/seed-acs.json, ./data/seed/seed-acs-2021.json]
          - table: ${self:custom.fmapTableName}
            sources: [./data/seed-local/seed-fmap.json]
          - table: ${self:custom.stateTableName}
            sources: [./data/seed-local/seed-state.json]
          - table: ${self:custom.stateStatusTableName}
            sources: [./data/seed-local/seed-status.json]
          - table: ${self:custom.sectionTableName}
            sources: [./data/seed-local/seed-section.json]
          - table: ${self:custom.sectionBaseTableName}
            sources: [./data/seed/seed-section-base.json]
          - table: ${self:custom.stageEnrollmentCountsTableName}
            sources: [./data/seed-local/seed-stg-enrollment-counts.json]
  # Disabling migration handler to unattach from v2 security group for teardown. Remove this and dataMigration folder in future
  # dataMigrationEnabled: ${env:runV2DataMigration, ssm:/configuration/${self:custom.stage}/runV2DataMigration, "false"}
  # dataMigrationEnvMap:
  #   production: prod
  #   val: staging
  #   main: master
  #   default: master
  # dataMigrationEnv: ${self:custom.dataMigrationEnvMap.${self:custom.stage}, self:custom.dataMigrationEnvMap.default}
  dataMigrationEnabled: false
  scripts:
    hooks:
      deploy:finalize: |
        serverless invoke --stage ${self:custom.stage} --function seed
        if [ ${self:custom.dataMigrationEnabled} = "true" ];
        then
          serverless invoke --stage ${self:custom.stage} --function dataMigration
        fi
  dynamodb:
    stages:
      - local
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed: ${self:custom.seedOptions.${self:custom.stage}, self:custom.seedOptions.default}
provider:
  name: aws
  runtime: nodejs16.x
  region: us-east-1
  iam:
    role:
      path: ${env:iamPath, ssm:/configuration/${self:custom.stage}/iam/path, ssm:/configuration/default/iam/path, "/"}
      permissionsBoundary: ${env:iamPermissionsBoundary, ssm:/configuration/${self:custom.stage}/iam/permissionsBoundaryPolicy, ssm:/configuration/default/iam/permissionsBoundaryPolicy, ""}
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "*"

functions:
  # Disabling migration handler to unattach from v2 security group for teardown. Remove this and dataMigration folder in future
  # dataMigration:
  #   handler: handlers/dataMigration/dataMigration.handler
  #   environment:
  #     postgresDb: ${env:postgresDatabase, ssm:/${self:custom.dataMigrationEnv}/postgres_db}
  #     postgresHost: ${env:postgresHost, ssm:/${self:custom.dataMigrationEnv}/postgres_host}
  #     postgresUser: ${env:postgresUser, ssm:/${self:custom.dataMigrationEnv}/postgres_user}
  #     postgresPassword: ${env:postgresPassword, ssm:/${self:custom.dataMigrationEnv}/custom/postgres_custom_password, ssm:/${self:custom.dataMigrationEnv}/postgres_password}
  #     dynamoPrefix: ${self:custom.stage}
  #   timeout: 120
  #   vpc:
  #     securityGroupIds:
  #       - ${env:runV2DataMigration, ssm:/configuration/${self:custom.stage}/migrationSecurityGroup, ssm:/configuration/default/migrationSecurityGroup}
  #     subnetIds:
  #       - ${env:runV2DataMigration, ssm:/configuration/${self:custom.stage}/migrationSubnet, ssm:/configuration/default/migrationSubnet}
  seed:
    handler: handlers/seed/seed.handler
    environment:
      dynamoPrefix: ${self:custom.stage}
      seedTestData: ${self:custom.seedTestData}
    timeout: 120

resources:
  Resources:
    AcsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.acsTableName}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: stateId
            AttributeType: S
          - AttributeName: year
            AttributeType: N
        KeySchema:
          - AttributeName: stateId
            KeyType: HASH
          - AttributeName: year
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    FmapTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.fmapTableName}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: fiscalYear
            AttributeType: N
          - AttributeName: stateId
            AttributeType: S
        KeySchema:
          - AttributeName: fiscalYear
            KeyType: HASH
          - AttributeName: stateId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    StateTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stateTableName}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: code
            AttributeType: S
        KeySchema:
          - AttributeName: code
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    StateStatusTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stateStatusTableName}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: year
            AttributeType: N
          - AttributeName: stateId
            AttributeType: S
        KeySchema:
          - AttributeName: stateId
            KeyType: HASH
          - AttributeName: year
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    SectionTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.sectionTableName}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sectionId
            AttributeType: N
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sectionId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    SectionBaseTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.sectionBaseTableName}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: year
            AttributeType: N
          - AttributeName: sectionId
            AttributeType: N
        KeySchema:
          - AttributeName: year
            KeyType: HASH
          - AttributeName: sectionId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    StageEnrollmentCountsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stageEnrollmentCountsTableName}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: entryKey
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: entryKey
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    UploadsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.uploadsTableName}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: uploadedState
            AttributeType: S
          - AttributeName: fileId
            AttributeType: S
        KeySchema:
          - AttributeName: uploadedState
            KeyType: HASH
          - AttributeName: fileId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
  Outputs:
    AcsTableName:
      Value: !Ref AcsTable
    AcsTableArn:
      Value: !GetAtt AcsTable.Arn
    FmapTableName:
      Value: !Ref FmapTable
    FmapTableArn:
      Value: !GetAtt FmapTable.Arn
    StateTableName:
      Value: !Ref StateTable
    StateTableArn:
      Value: !GetAtt StateTable.Arn
    StateStatusTableName:
      Value: !Ref StateStatusTable
    StateStatusTableStreamArn:
      Value: !GetAtt StateStatusTable.StreamArn
    StateStatusTableArn:
      Value: !GetAtt StateStatusTable.Arn
    SectionTableName:
      Value: !Ref SectionTable
    SectionTableArn:
      Value: !GetAtt SectionTable.Arn
    SectionTableStreamArn:
      Value: !GetAtt SectionTable.StreamArn
    SectionBaseTableName:
      Value: !Ref SectionBaseTable
    SectionBaseTableArn:
      Value: !GetAtt SectionBaseTable.Arn
    StageEnrollmentCountsTableName:
      Value: !Ref StageEnrollmentCountsTable
    StageEnrollmentCountsTableArn:
      Value: !GetAtt StageEnrollmentCountsTable.Arn
    UploadsTableName:
      Value: !Ref UploadsTable
    UploadsTableArn:
      Value: !GetAtt UploadsTable.Arn

    Region:
      Value: !Sub ${AWS::Region}
