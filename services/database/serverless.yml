service: database

frameworkVersion: "2"

plugins:
  - serverless-dynamodb-local
  - serverless-stack-termination-protection
  - serverless-s3-bucket-helper

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  serverlessTerminationProtection:
    stages:
      - main
      - master
      - val
      - prod
  measureTableName: ${self:custom.stage}-measures
  stateStatusTableName: ${self:custom.stage}-state-status
  sectionTableName: ${self:custom.stage}-section
  sectionBaseTableName: ${self:custom.stage}-section-base
  dynamodb:
    stages:
      - local
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed:
      domain:
        sources:
          - table: ${self:custom.stateStatusTableName}
            sources: [./seed-status.json]
          - table: ${self:custom.sectionTableName}
            sources: [./seed-section.json]
          - table: ${self:custom.sectionBaseTableName}
            sources: [./seed-section-base.json]


provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1

resources:
  Resources:
    MeasureTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.measureTableName}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: compoundKey
            AttributeType: S
          - AttributeName: coreSet
            AttributeType: S
        KeySchema:
          - AttributeName: compoundKey
            KeyType: HASH
          - AttributeName: coreSet
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    StateStatusTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.stateStatusTableName}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: year
            AttributeType: N
          - AttributeName: stateId
            AttributeType: S
        KeySchema:
          - AttributeName: stateId
            KeyType: HASH
          - AttributeName: year
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    SectionTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.sectionTableName}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: stateId
            AttributeType: S
          - AttributeName: year
            AttributeType: N
        KeySchema:
          - AttributeName: stateId
            KeyType: HASH
          - AttributeName: year
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
    SectionBaseTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.sectionBaseTableName}
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: year
            AttributeType: N
          - AttributeName: sectionId
            AttributeType: N
        KeySchema:
          - AttributeName: year
            KeyType: HASH
          - AttributeName: sectionId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST # Set the capacity to auto-scale
  Outputs:
    MeasureTableName:
      Value: !Ref MeasureTable
    MeasureTableArn:
      Value: !GetAtt MeasureTable.Arn
    StateStatusTableName:
      Value: !Ref StateStatusTable
    StateStatusTableArn:
      Value: !GetAtt StateStatusTable.Arn
    SectionTableName:
      Value: !Ref SectionTable
    SectionTableArn:
      Value: !GetAtt SectionTable.Arn
    SectionBaseTable:
      Value: !Ref SectionBaseTable
    SectionBaseTableArn:
      Value: !GetAtt SectionBaseTable.Arn
    Region:
      Value: !Sub ${AWS::Region}
