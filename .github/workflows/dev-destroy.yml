name: dev-destroy

on:
  delete:

concurrency:
  group: dev-${{ github.event.ref }}
  cancel-in-progress: false

jobs:
  destroy:
    # Protected branches should be designated as such in the GitHub UI.
    # So, a protected branch should never have this workflow run, since the branch should never be deleted.
    # This conditional is a backup mechanism to help prevent mistakes from becoming disasters.
    # This is a list of branch names that are commonly used for protected branches/environments.
    # Add/remove names from this list as appropriate.
    if: github.event.ref_type == 'branch' && !contains(fromJson('["master", "staging", "production", "prod"]'), github.event.ref) && startsWith(github.event.ref,'dev-')
    runs-on: ubuntu-latest
    steps:
      - name: set branch_name
        run: echo "BRANCH_NAME=${{ github.event.ref }}" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: set branch specific variable names
        run: |
          ./.github/build_vars.sh set_names
          echo "BUILD_TAG=${BRANCH_NAME}.${{ github.sha }}" >> "$GITHUB_ENV"
      - name: Create env var for  postgress deployer ECR repo name
        run: echo "ECR_REPOSITORY_POSTGRESS_DEPLOYER=postgres_deployer" >> "$GITHUB_ENV"
      - name: Create env var for  API postgress django ecr repo name
        run: echo "ECR_REPOSITORY_API_POSTGRESS=postgres_django" >> "$GITHUB_ENV"
      - name: set variable values
        run: ./.github/build_vars.sh set_values
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_AWS_ACCESS_KEY_ID] || secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_AWS_SECRET_ACCESS_KEY] || secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_AWS_DEFAULT_REGION] || secrets.AWS_DEFAULT_REGION }}
          VPC_NAME: ${{secrets.DEV_VPC_NAME}}
          OIDC_CLIENT_ID: ${{secrets.MASTER_OIDC_CLIENT_ID}}
          OIDC_ISSUER: ${{secrets.MASTER_OIDC_ISSUER}}
          TF_VAR_openid_discovery_url: ${{secrets.MASTER_TF_VAR_OPENID_DISCOVERY_URL}}
          ECR_REPOSITORY_POSTGRESS_DEPLOYER: "postgres_deployer"
          ECR_REPOSITORY_API_POSTGRESS: "postgres_django"
          APPLICATION_BUCKET: ${{secrets.APPLICATION_BUCKET}}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Terraform setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.11
          terraform_wrapper: false
      - name: Destroy frontend
        run: ./frontend_destroy.sh ${{secrets.APPLICATION_BUCKET}} ${{env.BRANCH_NAME}} destroy application_version=${{env.BUILD_TAG}} vpc_name=${{env.VPC_NAME}} ${{env.BUILD_TAG}}
      - name: Destroy data Layer
        run: ./data_layer_deploy.sh ${{secrets.APPLICATION_BUCKET}} ${{env.BRANCH_NAME}} destroy application_version=${{env.BUILD_TAG}} vpc_name=${{env.VPC_NAME}}
      - name: Destroy serverless
        run: |
          cd serverless
          ./destroy.sh ${{env.BRANCH_NAME}}
