name: Dev-destroy

on: delete
  delete:
    branches:
      - "actions-migration"
    #  - "dev-*"
    #  - "*"
    #  - "dependabot/**"
      - "!skipci*"
jobs:
  destroy:
    # Protected branches should be designated as such in the GitHub UI.
    # So, a protected branch should never have this workflow run, since the branch should never be deleted.
    # This conditional is a backup mechanism to help prevent mistakes from becoming disasters.
    # This is a list of branch names that are commonly used for protected branches/environments.
    # Add/remove names from this list as appropriate.
    #if: github.event.ref_type == 'branch' && !contains(fromJson('["master", "val", "prod", "saf", "production"]'), github.event.ref)
    if: github.event.ref_type == 'branch'
    runs-on: ubuntu-latest
    steps:
      - name: set branch_name
        run: echo "branch_name=${{ github.event.ref }}" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: set branch specific variable names
        run: |
          ./.github/build_vars.sh set_names
          echo "BUILD_TAG=${BRANCH_NAME}.${{ github.sha }}" >> "$GITHUB_ENV"
      - name: Create env var for  postgress deployer ECR repo name
        run:  echo "ECR_REPOSITORY_POSTGRESS_DEPLOYER=postgres_deployer" >> "$GITHUB_ENV"
      - name: Create env var for  API postgress django ecr repo name
        run:  echo "ECR_REPOSITORY_API_POSTGRESS=postgres_django" >> "$GITHUB_ENV"
      - name: set variable values
        run: ./.github/build_vars.sh set_values
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_AWS_ACCESS_KEY_ID] || secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_AWS_SECRET_ACCESS_KEY] || secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets[env.BRANCH_SPECIFIC_VARNAME_AWS_DEFAULT_REGION] || secrets.AWS_DEFAULT_REGION }}
          STAGE_PREFIX: ${{ secrets.STAGE_PREFIX }}
        #  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        #  CODE_CLIMATE_ID: ${{ secrets.CODE_CLIMATE_ID }}
          VPC_NAME: "macpro-dev"
          OIDC_CLIENT_ID: "0oa4juv4poiQ6nDB6297"
          OIDC_ISSUER: "https://test.idp.idm.cms.gov/oauth2/aus4itu0feyg3RJTK297"
          TF_VAR_openid_discovery_url: "https://test.idp.idm.cms.gov/oauth2/aus4itu0feyg3RJTK297/.well-known/openid-configuration"
          ECR_REPOSITORY_POSTGRESS_DEPLOYER: "postgres_deployer"
          ECR_REPOSITORY_API_POSTGRESS: "postgres_django"
          APPLICATION_BUCKET: ${{secrets.APPLICATION_BUCKET}}
      - name: lock this branch to prevent concurrent builds
        run: ./.github/github-lock.sh $BRANCH_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Destroy frontend
        run: ./frontend_deploy.sh ${{secrets.APPLICATION_BUCKET}} ${{env.BRANCH_NAME}} destroy application_version=${{env.BUILD_TAG}} vpc_name=macpro-dev ${{env.BUILD_TAG}}
      - name: Destroy data Layer
        run: ./data_layer_deploy.sh ${{secrets.APPLICATION_BUCKET}} ${{env.BRANCH_NAME}} destroy application_version=${{env.BUILD_TAG}} vpc_name=macpro-dev
      - name: Destroy serverless
        run: |
          cd serverless
          sudo ./destroy.sh ${{env.BRANCH_NAME}}
